{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAoBC,SAASC,cAAc,kBAC3CC,EAAmBF,SAASC,cAAc,iBAC1CE,EAAgBH,SAASC,cAAc,mBACvCG,EAASJ,SAASC,cAAc,SAEtCJ,EAAAQ,OAAOC,KAAK,CACVC,SAAS,IAyBX,SAASC,EAAcC,EAAUC,GAI/B,OAHsBC,KAAKC,SAAW,GAK7BC,QAAQC,QAAQ,C,SAAEL,E,MAAUC,IAG5BG,QAAQE,OAAO,C,SAAEN,E,MAAUC,G,CAXtCN,EAAOY,iBAAiB,UApBHC,IACnBA,EAAMC,iBACN,IAAIC,EAAeC,SAASrB,EAAkBsB,OAE9C,IAAK,IAAIC,EAAI,EAAGA,GAAKnB,EAAckB,MAAOC,GAAK,EAC7CC,YAAW,KACTf,EAAcc,EAAGH,GACdK,MAAK,EAACf,SAAEA,EAAQC,MAAEA,MACjBb,EAAAQ,OAAOoB,QAAQ,uBAAqBhB,QAAiBC,MAAU,IAEhEgB,OAAM,EAACjB,SAAEA,EAAQC,MAAEA,MAClBb,EAAAQ,OAAOsB,QAAQ,sBAAoBlB,QAAeC,MAAU,IAEhES,GAAgBC,SAASlB,EAAiBmB,MAAM,GAC/CF,GACHA,GAAgBC,SAASlB,EAAiBmB,OAE5CF,EAAeC,SAASrB,EAAkBsB,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst firstDelayInputEl = document.querySelector('[name=\"delay\"]');\nconst delayStepInputEl = document.querySelector('[name=\"step\"]');\nconst amountInputEl = document.querySelector('[name=\"amount\"]');\nconst formEl = document.querySelector('.form');\n\nNotify.init({\n  useIcon: false,\n});\n\nconst handleSubmit = event => {\n  event.preventDefault();\n  let generalDelay = parseInt(firstDelayInputEl.value);\n\n  for (let i = 1; i <= amountInputEl.value; i += 1) {\n    setTimeout(() => {\n      createPromise(i, generalDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      generalDelay += parseInt(delayStepInputEl.value);\n    }, generalDelay);\n    generalDelay += parseInt(delayStepInputEl.value);\n  }\n  generalDelay = parseInt(firstDelayInputEl.value);\n};\n\nformEl.addEventListener('submit', handleSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  // const shouldResolve = true;\n\n  if (shouldResolve) {\n    // Fulfill\n    return Promise.resolve({ position, delay });\n  } else {\n    // Reject\n    return Promise.reject({ position, delay });\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$firstDelayInputEl","document","querySelector","$47d4ff9957288465$var$delayStepInputEl","$47d4ff9957288465$var$amountInputEl","$47d4ff9957288465$var$formEl","Notify","init","useIcon","$47d4ff9957288465$var$createPromise","position","delay","Math","random","Promise","resolve","reject","addEventListener","event","preventDefault","generalDelay","parseInt","value","i","setTimeout","then","success","catch","failure"],"version":3,"file":"03-promises.b033f7b3.js.map"}