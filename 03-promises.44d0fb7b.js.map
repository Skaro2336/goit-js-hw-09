{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAoBC,SAASC,cAAc,kBAC3CC,EAAmBF,SAASC,cAAc,iBAC1CE,EAAgBH,SAASC,cAAc,mBACvCG,EAASJ,SAASC,cAAc,SAEtCJ,EAAAQ,OAAOC,KAAK,CACVC,SAAS,IAuBXH,EAAOI,iBAAiB,UApBH,SAAAC,G,kBAKjBC,YAAW,WAiBf,IAAuBC,EAAUC,GAAVD,EAhBHE,EAgBaD,EAhBVE,EAiBCC,KAAKC,SAAW,GAK7BC,QAAQC,QAAQ,CAAEP,WAAUC,UAG5BK,QAAQE,OAAO,CAAER,WAAUC,WAxB7BQ,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACjBf,EAAAQ,OAAOiB,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAE9DY,OAAM,SAAAH,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAClBf,EAAAQ,OAAOoB,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAE9DE,GAAgBY,SAASxB,EAAiByB,M,GACzCb,GACHA,GAAgBY,SAASxB,EAAiByB,M,EAd5ClB,EAAMmB,iBAGN,IAFA,IAAId,EAAeY,SAAS3B,EAAkB4B,OAErCE,EAAI,EAAGA,GAAK1B,EAAcwB,MAAOE,GAAK,EAACC,EAAAD,GAahDf,EAAeY,SAAS3B,EAAkB4B,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst firstDelayInputEl = document.querySelector('[name=\"delay\"]');\nconst delayStepInputEl = document.querySelector('[name=\"step\"]');\nconst amountInputEl = document.querySelector('[name=\"amount\"]');\nconst formEl = document.querySelector('.form');\n\nNotify.init({\n  useIcon: false,\n});\n\nconst handleSubmit = event => {\n  event.preventDefault();\n  let generalDelay = parseInt(firstDelayInputEl.value);\n\n  for (let i = 1; i <= amountInputEl.value; i += 1) {\n    setTimeout(() => {\n      createPromise(i, generalDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      generalDelay += parseInt(delayStepInputEl.value);\n    }, generalDelay);\n    generalDelay += parseInt(delayStepInputEl.value);\n  }\n  generalDelay = parseInt(firstDelayInputEl.value);\n};\n\nformEl.addEventListener('submit', handleSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  // const shouldResolve = true;\n\n  if (shouldResolve) {\n    // Fulfill\n    return Promise.resolve({ position, delay });\n  } else {\n    // Reject\n    return Promise.reject({ position, delay });\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$firstDelayInputEl","document","querySelector","$ce04d3a99e08e73b$var$delayStepInputEl","$ce04d3a99e08e73b$var$amountInputEl","$ce04d3a99e08e73b$var$formEl","Notify","init","useIcon","addEventListener","event","setTimeout","position","delay","i","generalDelay","Math","random","Promise","resolve","reject","then","param","success","concat","catch","failure","parseInt","value","preventDefault","i1","_loop"],"version":3,"file":"03-promises.44d0fb7b.js.map"}